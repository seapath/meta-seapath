Upstream-Status: Backport

From 8f0646a03fbf31c19b85ec367dc2c3db56e6dbf7 Mon Sep 17 00:00:00 2001
From: Francis Deslauriers <francis.deslauriers@efficios.com>
Date: Mon, 25 Oct 2021 11:32:24 -0400
Subject: [PATCH] Typo: occurences -> occurrences
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Francis Deslauriers <francis.deslauriers@efficios.com>
Signed-off-by: Jérémie Galarneau <jeremie.galarneau@efficios.com>
Change-Id: I719e26febd639f3b047b6aa6361fc6734088e871
---
 configure.ac                                             | 2 +-
 src/bin/lttng-relayd/live.c                              | 2 +-
 src/bin/lttng-sessiond/event-notifier-error-accounting.c | 2 +-
 src/bin/lttng-sessiond/ust-app.c                         | 2 +-
 tests/utils/utils.sh                                     | 8 ++++----
 5 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/configure.ac b/configure.ac
index 12cc7a17e..27148c105 100644
--- a/configure.ac
+++ b/configure.ac
@@ -253,7 +253,7 @@ AS_IF([test "x$libtool_fixup" = "xyes"],
 	    [
 	    libtool_m4="$srcdir/m4/libtool.m4"
 	    libtool_flag_pattern=".*link_all_deplibs\s*,\s*\$1\s*)"
-	    AC_MSG_CHECKING([for occurence(s) of link_all_deplibs = no in $libtool_m4])
+	    AC_MSG_CHECKING([for occurrence(s) of link_all_deplibs = no in $libtool_m4])
 	    libtool_flag_pattern_count=$($GREP -c "$libtool_flag_pattern\s*=\s*no" $libtool_m4)
 	    AS_IF([test $libtool_flag_pattern_count -ne 0],
 	    [
diff --git a/src/bin/lttng-relayd/live.c b/src/bin/lttng-relayd/live.c
index 13078026b..42b0d947e 100644
--- a/src/bin/lttng-relayd/live.c
+++ b/src/bin/lttng-relayd/live.c
@@ -2036,7 +2036,7 @@ int viewer_get_metadata(struct relay_connection *conn)
 
 	/*
 	 * Either this is the first time the metadata file is read, or a
-	 * rotation of the corresponding relay stream has occured.
+	 * rotation of the corresponding relay stream has occurred.
 	 */
 	if (!vstream->stream_file.handle && len > 0) {
 		struct fs_handle *fs_handle;
diff --git a/src/bin/lttng-sessiond/event-notifier-error-accounting.c b/src/bin/lttng-sessiond/event-notifier-error-accounting.c
index d3e3692f5..1488d801c 100644
--- a/src/bin/lttng-sessiond/event-notifier-error-accounting.c
+++ b/src/bin/lttng-sessiond/event-notifier-error-accounting.c
@@ -488,7 +488,7 @@ struct ust_error_accounting_entry *ust_error_accounting_entry_create(
 	lttng_ust_ctl_destroy_counter(daemon_counter);
 error_create_daemon_counter:
 error_shm_alloc:
-	/* Error occured before per-cpu SHMs were handed-off to ustctl. */
+	/* Error occurred before per-cpu SHMs were handed-off to ustctl. */
 	if (cpu_counter_fds) {
 		for (i = 0; i < entry->nr_counter_cpu_fds; i++) {
 			if (cpu_counter_fds[i] < 0) {
diff --git a/src/bin/lttng-sessiond/ust-app.c b/src/bin/lttng-sessiond/ust-app.c
index b18988560..28c63e70c 100644
--- a/src/bin/lttng-sessiond/ust-app.c
+++ b/src/bin/lttng-sessiond/ust-app.c
@@ -1342,7 +1342,7 @@ static struct ust_app_event_notifier_rule *alloc_ust_app_event_notifier_rule(
 	case LTTNG_EVENT_RULE_GENERATE_EXCLUSIONS_STATUS_NONE:
 		break;
 	default:
-		/* Error occured. */
+		/* Error occurred. */
 		ERR("Failed to generate exclusions from trigger while allocating an event notifier rule");
 		goto error_put_trigger;
 	}
diff --git a/tests/utils/utils.sh b/tests/utils/utils.sh
index e463e4fe3..42d99444f 100644
--- a/tests/utils/utils.sh
+++ b/tests/utils/utils.sh
@@ -1921,7 +1921,7 @@ function validate_trace
 			pass "Validate trace for event $i, $traced events"
 		else
 			fail "Validate trace for event $i"
-			diag "Found $traced occurences of $i"
+			diag "Found $traced occurrences of $i"
 		fi
 	done
 	ret=$?
@@ -1949,7 +1949,7 @@ function validate_trace_count
 			pass "Validate trace for event $i, $traced events"
 		else
 			fail "Validate trace for event $i"
-			diag "Found $traced occurences of $i"
+			diag "Found $traced occurrences of $i"
 		fi
 		cnt=$(($cnt + $traced))
 	done
@@ -1979,7 +1979,7 @@ function validate_trace_count_range_incl_min_excl_max
 			pass "Validate trace for event $i, $traced events"
 		else
 			fail "Validate trace for event $i"
-			diag "Found $traced occurences of $i"
+			diag "Found $traced occurrences of $i"
 		fi
 		cnt=$(($cnt + $traced))
 	done
@@ -2013,7 +2013,7 @@ function validate_trace_exp()
 		pass "Validate trace for expression '${event_exp}', $traced events"
 	else
 		fail "Validate trace for expression '${event_exp}'"
-		diag "Found $traced occurences of '${event_exp}'"
+		diag "Found $traced occurrences of '${event_exp}'"
 	fi
 	ret=$?
 	return $ret
