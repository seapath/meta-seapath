[Unit]
Description=Corosync Cluster Engine
Documentation=man:corosync man:corosync.conf man:corosync_overview
ConditionKernelCommandLine=!nocluster
Requires=network-online.target
After=network-online.target create-corosync-pid.service create-corosync-log-dir.service
Wants=create-corosync-pid.service create-corosync-log-dir.service

[Service]
EnvironmentFile=-/etc/sysconfig/corosync
ExecStart=/usr/sbin/corosync -f $COROSYNC_OPTIONS
Type=notify

# In typical systemd deployments, both standard outputs are forwarded to
# journal (stderr is what's relevant in the pristine corosync configuration),
# which hazards a message redundancy since the syslog stream usually ends there
# as well; before editing this line, you may want to check DefaultStandardError
# in systemd-system.conf(5) and whether /dev/log is a systemd related symlink.
StandardError=null

# The following config is for corosync with enabled watchdog service.
#
#  When corosync watchdog service is being enabled and using with
#  pacemaker.service, and if you want to exert the watchdog when a
#  corosync process is terminated abnormally,
#  uncomment the line of the following Restart= and RestartSec=.
#Restart=on-failure
#  Specify a period longer than soft_margin as RestartSec.
#RestartSec=70
#  rewrite according to environment.
#ExecStartPre=/sbin/modprobe softdog

PrivateTmp=yes
NoNewPrivileges=true
ProtectSystem=strict
ReadWritePaths=/var/log/cluster /var/log/corosync /var/lib/corosync /var/run/corosync.pid
ProtectHome=tmpfs
ProtectKernelModules=yes
ProtectKernelTunables=yes
ProtectControlGroups=yes
RestrictSUIDSGID=true
RestrictNamespaces=true
MemoryDenyWriteExecute=yes
CapabilityBoundingSet=cap_sys_nice cap_ipc_lock cap_fowner cap_dac_override cap_chown cap_net_admin
PrivateDevices=yes
SystemCallFilter=@system-service

[Install]
WantedBy=multi-user.target
