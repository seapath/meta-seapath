From c28cd748aa7928abb77ac559d718d710e635cbde Mon Sep 17 00:00:00 2001
From: Paul Le Guen de Kerneizon <paul.leguendekerneizon@savoirfairelinux.com>
Date: Mon, 14 Oct 2024 15:08:21 +0200
Subject: [PATCH] vm-manager: fix RADOS permission denied issue
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

If an "import libvirt" is done before performing the RADOS connection,
the connection will fail with a permission denied error.

As a workaround, we can create the RADOS connection when importing the
module and keep it alive until the end of the program.

Upstream-Status: Inappropriate [oe specific]

Signed-off-by: Mathieu Dupr√© <mathieu.dupre@savoirfairelinux.com>
Signed-off-by: Paul Le Guen de Kerneizon <paul.leguendekerneizon@savoirfairelinux.com>
---
 vm_manager/__init__.py            |  4 ++++
 vm_manager/helpers/rbd_manager.py | 31 ++++++++++++++++++++++++-------
 2 files changed, 28 insertions(+), 7 deletions(-)

diff --git a/vm_manager/__init__.py b/vm_manager/__init__.py
index 3f846a3..56014f8 100644
--- a/vm_manager/__init__.py
+++ b/vm_manager/__init__.py
@@ -1,6 +1,10 @@
 # Copyright (C) 2021, RTE (http://www.rte-france.com)
 # SPDX-License-Identifier: Apache-2.0
 
+
+from  .helpers.rbd_manager import get_or_create_rados_context
+get_or_create_rados_context()
+
 try:
     from .helpers.rbd_manager import RbdManager
     from .helpers.pacemaker import Pacemaker
diff --git a/vm_manager/helpers/rbd_manager.py b/vm_manager/helpers/rbd_manager.py
index de259d4..75f5bd6 100644
--- a/vm_manager/helpers/rbd_manager.py
+++ b/vm_manager/helpers/rbd_manager.py
@@ -15,13 +15,35 @@ from rbd import RBD, Group, Image
 
 logger = logging.getLogger(__name__)
 
+rados_cluster = None
+current_ceph_conf = None
+
+def get_or_create_rados_context(ceph_conf="/etc/ceph/ceph.conf"):
+    """
+    Return a Rados context.
+    """
+    if not os.path.isfile(ceph_conf):
+        raise IOError(ENOENT, "Could not find file", ceph_conf)
+
+    global rados_cluster
+    global current_ceph_conf
+    if current_ceph_conf is None:
+        current_ceph_conf = ceph_conf
+
+    if current_ceph_conf != ceph_conf:
+        raise RbdException("Different ceph configuration file")
+
+    if not rados_cluster:
+        rados_cluster = Rados(conffile=ceph_conf, conf = dict (keyring = '/etc/ceph/ceph.client.admin.keyring'))
+        rados_cluster.connect()
+    return rados_cluster
+
 
 class RbdException(Exception):
     """
     To be used to raise exceptions from this module.
     """
 
-
 class RbdManager:
     """
     Helper class to manipulate RBD.
@@ -33,18 +55,13 @@ class RbdManager:
         """
         Class constructor.
         """
-
-        if not os.path.isfile(ceph_conf):
-            raise IOError(ENOENT, "Could not find file", ceph_conf)
-
-        self._cluster = Rados(conffile=ceph_conf)
+        self._cluster = get_or_create_rados_context(ceph_conf)
         self._rbd_inst = RBD()
 
         self._namespace = namespace
         self._pool = pool
 
         try:
-            self._cluster.connect()
             self._ioctx = self._cluster.open_ioctx(self._pool)
             self.set_namespace(self._namespace)
             logger.info("Module has been successfully initialized")
-- 
2.47.0

